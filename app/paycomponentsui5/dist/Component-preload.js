//@ui5-bundle qa/com/qelng/pcui5/paycomponentsui5/Component-preload.js
sap.ui.require.preload({
	"qa/com/qelng/pcui5/paycomponentsui5/Component.js":function(){
sap.ui.define(["sap/ui/core/UIComponent","qa/com/qelng/pcui5/paycomponentsui5/model/models"],(e,t)=>{"use strict";return e.extend("qa.com.qelng.pcui5.paycomponentsui5.Component",{metadata:{manifest:"json",interfaces:["sap.ui.core.IAsyncContentCreation"]},init(){e.prototype.init.apply(this,arguments);this.setModel(t.createDeviceModel(),"device");this.getRouter().initialize()}})});
},
	"qa/com/qelng/pcui5/paycomponentsui5/controller/App.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],e=>{"use strict";return e.extend("qa.com.qelng.pcui5.paycomponentsui5.controller.HealthCardForm",{onInit(){}})});
},
	"qa/com/qelng/pcui5/paycomponentsui5/controller/BaseController.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/core/routing/History","sap/m/MessageBox"],function(e,t,n){"use strict";return e.extend("qa.com.qelng.pcui5.paycomponentsui5.controller.BaseController",{onInit(){},getResourceBundle:function(){return this.getOwnerComponent().getModel("i18n").getResourceBundle()},getModel:function(e){return this.getView().getModel(e)},setModel:function(e,t){return this.getView().setModel(e,t)},getRouter:function(){return this.getOwnerComponent().getRouter()},getBaseURL:function(){let e=this.getOwnerComponent().getManifestEntry("/sap.app/id");let t=e.replaceAll(".","/");let n=sap.ui.require.toUrl(t);return n},onNavButtonPress:function(){let e=t.getInstance().getPreviousHash();if(e!==undefined){history.go(-1)}else{this.getOwnerComponent().getRouter().navTo("RouteHealthCardForm",{})}}})});
},
	"qa/com/qelng/pcui5/paycomponentsui5/controller/ExecutionLogs.controller.js":function(){
sap.ui.define(["qa/com/qelng/pcui5/paycomponentsui5/controller/BaseController","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/export/library","sap/ui/export/Spreadsheet","sap/m/MessageToast"],function(e,t,o,r,n,i){"use strict";let p=r.EdmType;return e.extend("qa.com.qelng.pcui5.paycomponentsui5.controller.ExecutionLogs",{onInit:function(){},onSearch:function(){let e=this.byId("resultPerEmpTable").getBinding("items"),r=this.byId("searchInput").getValue(),n=new t("userId",o.Contains,r);if(r==""){e.filter([])}else{e.filter(n)}},getText:function(e){return this.getResourceBundle().getText(e)},createColumnConfig:function(){let e=[];e.push({label:this.getText("IDExecution"),property:"executionId",type:p.Integer});e.push({label:this.getText("timeStamp"),property:"timeStamp",type:p.DateTime});e.push({label:this.getText("simulationMode"),property:"simulationMode",type:p.Boolean,trueValue:"X",falseValue:""});e.push({label:this.getText("userID"),property:"userId",type:p.String});e.push({label:this.getText("organizationalUnit"),property:"orgUnit",type:p.String});e.push({label:this.getText("group"),property:"group",type:p.String});e.push({label:this.getText("department"),property:"department",type:p.String});e.push({label:this.getText("job"),property:"job",type:p.String});e.push({label:this.getText("hRPersonnelArea"),property:"hRPersonnelArea",type:p.String});e.push({label:this.getText("employeeGroup"),property:"employeeGroup",type:p.String});e.push({label:this.getText("payComponent"),property:"payComponent",type:p.String});e.push({label:this.getText("eligible"),property:"eligible",type:p.Boolean});e.push({label:this.getText("referenceDate"),property:"referenceDate",type:p.Date});e.push({label:this.getText("amount"),property:"amount",type:p.Decimal});e.push({label:this.getText("toBeUpdated"),property:"updated",type:p.Boolean});e.push({label:this.getText("details"),property:"details",type:p.String});return e},onDownload:function(e){let r,p,a,l,s=true;let u=e.getSource().getBindingContext("ExecutionLogServiceModel").getProperty("executionId");p=this.byId("resultPerEmpTable").getBinding("items").filter(new t("executionId",o.EQ,u));r=this.createColumnConfig();a={workbook:{columns:r},dataSource:p,fileName:this.getText("IDExecution")+" "+u+".xlsx"};p.attachDataReceived(function(){if(s){l=new n(a);l.build().then(function(){s=false;this.onSearch();i.show(this.getText("downloadCompleted"))}.bind(this),function(e){}.bind(this)).finally(function(){l.destroy()}.bind(this))}}.bind(this))},dateFormat:function(e){let t=sap.ui.core.format.DateFormat.getDateInstance({pattern:"dd/MM/yyyy"});return t.format(new Date(e))},dateTimeFormat:function(e){let t=sap.ui.core.format.DateFormat.getDateInstance({pattern:"dd/MM/yyyy hh:mm:ss"});return t.format(new Date(e))}})});
},
	"qa/com/qelng/pcui5/paycomponentsui5/controller/HealthCardForm.controller.js":function(){
sap.ui.define(["qa/com/qelng/pcui5/paycomponentsui5/controller/BaseController","sap/ui/model/json/JSONModel","sap/m/MessageBox","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/core/Fragment"],function(e,t,r,n,i,o){"use strict";let l="";let s={healthCardForm:{}};return e.extend("qa.com.qelng.pcui5.paycomponentsui5.controller.HealthCardForm",{onInit:function(){let e=new t,r=Object.assign({},s);e.setData(r);this.setModel(e);let n=[];for(let e=2024;e<=2100;e++){n.push({year:e})}e.setProperty("/healthCardForm/year",n);let i=this.getOwnerComponent().getModel("pcModel");i.setSizeLimit(5e4)},onAfterRendering:function(){let e=this.getView();let t=e.getModel();this.defaultHealthCardFormBinding(t);this.byId("healthCardForm").bindElement("/healthCardForm")},defaultHealthCardFormBinding(){this.clearListSelection();let e=this.getView().getModel();e.setProperty("/healthCardForm/payComponent","");e.setProperty("/healthCardForm/referenceYear","");e.setProperty("/healthCardForm/userId","");e.setProperty("/healthCardForm/organizationalUnit","");e.setProperty("/healthCardForm/group","");e.setProperty("/healthCardForm/department","");e.setProperty("/healthCardForm/job","");e.setProperty("/healthCardForm/hrPersonnelArea","");e.setProperty("/healthCardForm/employeeGroup","");e.setProperty("/healthCardForm/simulationMode",false);e.setProperty("/healthCardForm/adminEmail","")},resetOnRefYearChange:function(){this.clearListSelection();let e=this.getView().getModel();e.setProperty("/healthCardForm/userId","");e.setProperty("/healthCardForm/organizationalUnit","");e.setProperty("/healthCardForm/group","");e.setProperty("/healthCardForm/department","");e.setProperty("/healthCardForm/job","");e.setProperty("/healthCardForm/hrPersonnelArea","");e.setProperty("/healthCardForm/employeeGroup","");e.setProperty("/healthCardForm/simulationMode",false);e.setProperty("/healthCardForm/adminEmail","")},clearListSelection:function(){let e=this.getView().getModel().getData().healthCardForm;if(e.department){this.byId("departmentList").clearSelection()}if(e.job){this.byId("jobList").clearSelection()}if(e.group){this.byId("groupList").clearSelection()}if(e.organizationalUnit){this.byId("orgUnitList").clearSelection()}if(e.hrPersonnelArea){this.byId("hrPersonnelAreaList").clearSelection()}if(e.employeeGroup){this.byId("employeeGroupList").clearSelection()}},handleRefYearChange:function(e){this.resetOnRefYearChange();let t=e.getSource().getSelectedKey();l=t+"-01-01"},oFilter:function(){return new n({filters:[new n("startDate",i.LE,l),new n("endDate",i.GE,l)],and:true})},oFilterSecond:function(){return new n({filters:[new n("effectiveStartDate",i.LE,l),new n("mdfSystemEffectiveEndDate",i.GE,l)],and:true})},onValueHelpDialogConfirm:function(e){let t=e.getParameter("selectedItems");let r="";if(e.getSource().getId().includes("orgUnitList")){r="orgUnitInput"}else if(e.getSource().getId().includes("jobList")){r="jobInput"}else if(e.getSource().getId().includes("groupList")){r="groupInput"}else if(e.getSource().getId().includes("departmentList")){r="departmentInput"}else if(e.getSource().getId().includes("hrPersonnelAreaList")){r="hrPersonnelAreaInput"}else if(e.getSource().getId().includes("employeeGroupList")){r="employeeGroupInput"}let n=this.byId(r);if(!t){n.resetProperty("value");return}let i=[];for(let e=0;e<t.length;e++){i.push(t[e].getTitle())}n.setValue(i.toString())},orgUnitValueHelp:function(){let e=this.getView();if(!this.orgUnitHelpDialog){this.orgUnitHelpDialog=o.load({id:e.getId(),name:"qa.com.qelng.pcui5.paycomponentsui5.view.orgUnitValueHelp",controller:this}).then(function(t){e.addDependent(t);t._searchField.setVisible(false);return t}.bind(this))}this.orgUnitHelpDialog.then(function(e){if(l==""){r.warning(this.getResourceBundle().getText("selectReferenceYear"))}else{let t=this.byId("orgUnitList").getBinding("items");t.filter(this.oFilter());e.open()}}.bind(this))},jobValueHelp:function(){let e=this.getView();if(!this._jobValueHelpDialog){this._jobValueHelpDialog=o.load({id:e.getId(),name:"qa.com.qelng.pcui5.paycomponentsui5.view.jobValueHelp",controller:this}).then(function(t){e.addDependent(t);t._searchField.setVisible(false);return t}.bind(this))}this._jobValueHelpDialog.then(function(e){if(l==""){r.warning(this.getResourceBundle().getText("selectReferenceYear"))}else{let t=this.byId("jobList").getBinding("items");t.filter(this.oFilter());e.open()}}.bind(this))},groupValueHelp:function(){let e=this.getView();if(!this._groupHelpDialog){this._groupHelpDialog=o.load({id:e.getId(),name:"qa.com.qelng.pcui5.paycomponentsui5.view.groupValueHelp",controller:this}).then(function(t){e.addDependent(t);t._searchField.setVisible(false);return t}.bind(this))}this._groupHelpDialog.then(function(e){if(l==""){r.warning(this.getResourceBundle().getText("selectReferenceYear"))}else{let t=this.byId("groupList").getBinding("items");t.filter(this.oFilter());e.open()}}.bind(this))},departmentValueHelp:function(){let e=this.getView();if(!this._departmentHelpDialog){this._departmentHelpDialog=o.load({id:e.getId(),name:"qa.com.qelng.pcui5.paycomponentsui5.view.departmentValueHelp",controller:this}).then(function(t){e.addDependent(t);t._searchField.setVisible(false);return t}.bind(this))}this._departmentHelpDialog.then(function(e){if(l==""){r.warning(this.getResourceBundle().getText("selectReferenceYear"))}else{let t=this.byId("departmentList").getBinding("items");t.filter(this.oFilter());e.open()}}.bind(this))},hrPersonnelAreaValueHelp:function(){let e=this.getView();if(!this._hrPersonnelAreaValueHelpDialog){this._hrPersonnelAreaValueHelpDialog=o.load({id:e.getId(),name:"qa.com.qelng.pcui5.paycomponentsui5.view.hrPersonnelAreaValueHelp",controller:this}).then(function(t){e.addDependent(t);t._searchField.setVisible(false);return t}.bind(this))}this._hrPersonnelAreaValueHelpDialog.then(function(e){if(l==""){r.warning(this.getResourceBundle().getText("selectReferenceYear"))}else{let t=this.byId("hrPersonnelAreaList").getBinding("items");t.filter(this.oFilterSecond());e.open()}}.bind(this))},employeeGroupValueHelp:function(){let e=this.getView();if(!this._employeeGroupValueHelpDialog){this._employeeGroupValueHelpDialog=o.load({id:e.getId(),name:"qa.com.qelng.pcui5.paycomponentsui5.view.employeeGroupValueHelp",controller:this}).then(function(t){e.addDependent(t);t._searchField.setVisible(false);return t}.bind(this))}this._employeeGroupValueHelpDialog.then(function(e){if(l==""){r.warning(this.getResourceBundle().getText("selectReferenceYear"))}else{let t=this.byId("employeeGroupList").getBinding("items");t.filter(this.oFilterSecond());e.open()}}.bind(this))},onExecute:function(){let e=this.getView().getModel().getData().healthCardForm;if(!this.validateEmail(this.splitFunction(e.adminEmail))){r.error(this.getResourceBundle().getText("correctEmail"));return}else if(!this.onSubmitCheck()){let t=this.getModel("pcModel").bindContext("/exectue(...)");t.setParameter("payComponent",this.convertPcToObject(e.payComponent));t.setParameter("referenceYear",parseInt(e.referenceYear));t.setParameter("userIds",this.splitFunction(e.userId));t.setParameter("foJobs",this.convertToJobsObject(e.job));t.setParameter("departments",this.convertToDepartmentsObject(e.department));t.setParameter("groups",this.convertToDepartmentsObject(e.group));t.setParameter("orgUnits",this.convertToOrgUnitsObject(e.organizationalUnit));t.setParameter("HRPersonnelArea",this.convertToHrPObject(e.hrPersonnelArea));t.setParameter("custEmployeeGroup",this.convertToHrPObject(e.employeeGroup));t.setParameter("emails",this.splitFunction(e.adminEmail));t.setParameter("simulationMode",e.simulationMode);t.execute().then(function(){r.success(this.getResourceBundle().getText("dataSent"));this.defaultHealthCardFormBinding()}.bind(this),function(e){r.error(e.message)}.bind(this)).then(function(){}.bind(this))}else{r.error(this.getResourceBundle().getText("mandatoryFields"))}},convertPcToObject:function(e){const t=e.split("_#");const r={ID:t[0],name:t[1],code:t[2]};return r},splitFunction:function(e){if(e==""){return[]}else{return e.split(",").map(e=>e.trim()).filter(e=>e!=="")}},convertToJobsObject:function(e){if(e==""){return[]}else{const t=e.split(",").map(e=>{const t=e.match(/(.*) \((\w+)\)$/);return{externalCode:t[2],custName:t[1]}});return t}},convertToDepartmentsObject:function(e){if(e==""){return[]}else{const t=e.split(",").map(e=>{const t=e.match(/(.*) \((\w+)\)$/);return{custExternalcode:t[2],name_defaultValue:t[1]}});return t}},convertToOrgUnitsObject:function(e){if(e==""){return[]}else{const t=e.split(",").map(e=>{const t=e.match(/(.*) \((\w+)\)$/);return{externalCode:t[2],orgunit:t[1]}});return t}},convertToHrPObject:function(e){if(e==""){return[]}else{const t=e.split(",").map(e=>{const t=e.match(/(.*) \((\w+)\)$/);return{externalCode:t[2],externalName:t[1]}});return t}},validateEmail:function(e){if(e){const t=/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,11})+$/;return e.every(e=>t.test(e))}else{return true}},onSubmitCheck:function(){let e=this.byId("pcSelect"),t=this.byId("referenceYearSelect");let r=false;if(e.getValue().length<1){e.setValueState("Error");e.setValueStateText(this.getResourceBundle().getText("cannotBeEmpty"));r=true}else{e.setValueState("None");r=false}if(t.getValue().length<1){t.setValueState("Error");t.setValueStateText(this.getResourceBundle().getText("cannotBeEmpty"));r=true}else{t.setValueState("None");r=false}return r},onPressExecLogs:function(){this.getRouter().navTo("RouteExecutionLogs")}})});
},
	"qa/com/qelng/pcui5/paycomponentsui5/i18n/i18n.properties":'# This is the resource bundle for qa.com.qelng.pcui5.paycomponentsui\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=Pay Components\n\n#YDES: Application description\nappDescription=An SAP Fiori application.\n\n#XTIT: Main view title\ntitle=Pay Components\n\n#XTIT: Form title\nformTitle=Health Card Form\n\n#XTIT: Title for Please Select\npleaseSelect=Please Select:\n\n#XFLD: Label for Pay Component\npayComponent=Pay Component\n\n#XFLD: Label for Pay Component\nreferenceYear=Reference Year\n\n#XTIT: Title for Mode\nmode=Mode:\n\n#XFLD: Label for Simulation Mode\nsimulationMode=Simulation Mode\n\n#XTIT: Title for Employee Filter Criteria\nemployeeFilterCriteria=Employee Filter Criteria:\n\n#XFLD: Label for UserID\nuserId=UserID\n\n#XFLD: Label for Organizational Unit\norganizationalUnit=Organizational Unit\n\n#XFLD: Label for Group\ngroup=Group\n\n#XFLD: Label for Department\ndepartment=Department\n\n#XFLD: Label for Job\njob=Job\n\n#XFLD: Label for HR Personnel Area\nhrPersonnelArea=HR Personnel Area\n\n#XFLD: Label for Employee Group\nemployeeGroup=Employee Group\n\n#XTIT: Title for Additional Settings\nadditionalSettings=Additional Settings:\n\n#XFLD: Label for Admin Email(s)\nadminEmail=Admin Email(s)\n\n#XBUT: Button Text for Execute\nexecute=Execute\n\n#XBUT: Button Text for Logs and Results\nlogsAndResults=Logs and Results\n\n#XTXT: Text for Field Cannot be Empty\ncannotBeEmpty=Field Cannot be Empty\n\n#XTXT: Text for Please Select Reference Year\nselectReferenceYear=Please Select Reference Year\n\n#XTXT: Text for No Data\nnoData=No Data Found\n\n#XTXT: Text for Pay Component and Reference Year cannot be empty\nmandatoryFields=Pay Component and Reference Year cannot be empty\n\n#XTXT: Text for Data Sent Successfully\ndataSent=Data Sent Successfully\n\n#XTXT: Text for No Selection\nnoSelection=No Selection\n\n#XTXT: Text for comma seprated\ncommaSeparated=Comma separated values\n\n#XTXT: Text for Correct Email\ncorrectEmail=Please enter email in correct format\n\n#XTXT: Text for Health Card for Nationals and Non-Nationals Generation\nhealthCardText=Health Card for Nationals and Non-Nationals Generation\n\n#Execution Logs Page\n\n#XTIT: Logs per Execution title\nlogsPerExecution=Logs per Execution\n\n#XCOL: ID Execution Column Heading\nIDExecution=ID Execution\n\n#XCOL: Date of Execution Column Heading\ndateofExecution=Date of Execution\n\n#XCOL: Logs Column Heading\nlogs=Logs\n\n#XBUT: Download Text\ndownload=Download\n\n#XTIT: Result per Employee Title\nresultperEmployee=Result per Employee\n\n#XTXT: UserID Text\nuserID=UserID\n\n#XBUT: Search Text\nsearch=Search\n\n#XCOL: TimeStamp Column Heading\ntimeStamp=TimeStamp\n\n#XCOL: Simulation Mode Column Heading\nsimulationMode=Simulation Mode\n\n#XCOL: Organizational Unit Column Heading\norganizationalUnit=Organizational Unit\n\n#XCOL: Group Column Heading\ngroup=Group\n\n#XCOL: Department Column Heading\ndepartment=Department\n\n#XCOL: Job Column Heading\njob=Job\n\n#XCOL: HR Personnel Area Column Heading\nhRPersonnelArea=HR Personnel Area\n\n#XCOL: Employee Group Column Heading\nemployeeGroup=Employee Group\n\n#XCOL: Pay Component Column Heading\npayComponent=Pay Component\n\n#XCOL: Eligible Column Heading\neligible=Eligible\n\n#XCOL: Reference Date Column Heading\nreferenceDate=Reference Date\n\n#XCOL: Amount Column Heading\namount=Amount\n\n#XCOL: To Be Updated Column Heading\ntoBeUpdated=To Be Updated\n\n#XCOL: Details Column Heading\ndetails=Details\n\n#XCOL: Report Column Heading\nreport=Report\n\n#XTXT: Download Completed Text\ndownloadCompleted=Download Completed\n\n#XTXT: No eligible employees found Text\nnoEligible=No eligible employees found\n',
	"qa/com/qelng/pcui5/paycomponentsui5/manifest.json":'{"_version":"1.65.0","sap.cloud":{"public":true,"service":"qelngpc.ui5"},"sap.app":{"id":"qa.com.qelng.pcui5.paycomponentsui5","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.6"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap/generator-fiori:basic","version":"1.15.5","toolsId":"edaa8daf-711e-43ba-a6d0-24e7548ee36d"},"dataSources":{"proxyService":{"uri":"odata/v4/proxy_service/","type":"OData","settings":{"synchronizationMode":"None","operationMode":"Server","autoExpandSelect":true,"annotations":[],"odataVersion":"4.0"}},"ExecutionLogService":{"uri":"odata/v4/qa.com.qelng.pc.srv.ExecutionLogService/","type":"OData","settings":{"synchronizationMode":"None","operationMode":"Server","autoExpandSelect":true,"annotations":[],"odataVersion":"4.0"}}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":true,"dependencies":{"minUI5Version":"1.130.0","libs":{"sap.m":{},"sap.ui.core":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"qa.com.qelng.pcui5.paycomponentsui5.i18n.i18n"}},"pcModel":{"dataSource":"proxyService","preload":true,"settings":{"synchronizationMode":"None","operationMode":"Server","autoExpandSelect":true,"earlyRequests":true}},"ExecutionLogServiceModel":{"dataSource":"ExecutionLogService","preload":true,"settings":{"synchronizationMode":"None","operationMode":"Server","autoExpandSelect":true,"earlyRequests":true}}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","controlAggregation":"pages","controlId":"app","transition":"slide","type":"View","viewType":"XML","path":"qa.com.qelng.pcui5.paycomponentsui5.view"},"routes":[{"name":"RouteHealthCardForm","pattern":":?query:","target":["TargetHealthCardForm"]},{"name":"RouteExecutionLogs","pattern":"executionlogs","target":["TargetExecutionLogs"]}],"targets":{"TargetHealthCardForm":{"id":"HealthCardForm","name":"HealthCardForm"},"TargetExecutionLogs":{"id":"ExecutionLogs","name":"ExecutionLogs"}}},"rootView":{"viewName":"qa.com.qelng.pcui5.paycomponentsui5.view.App","type":"XML","id":"App"}}}',
	"qa/com/qelng/pcui5/paycomponentsui5/model/models.js":function(){
sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device"],function(e,n){"use strict";return{createDeviceModel:function(){var i=new e(n);i.setDefaultBindingMode("OneWay");return i}}});
},
	"qa/com/qelng/pcui5/paycomponentsui5/view/App.view.xml":'<mvc:View controllerName="qa.com.qelng.pcui5.paycomponentsui5.controller.App"\n    displayBlock="true"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"><App id="app"></App></mvc:View>',
	"qa/com/qelng/pcui5/paycomponentsui5/view/ExecutionLogs.view.xml":'<mvc:View controllerName="qa.com.qelng.pcui5.paycomponentsui5.controller.ExecutionLogs"\n    xmlns:mvc="sap.ui.core.mvc" displayBlock="true"\n    xmlns="sap.m" xmlns:uxap="sap.uxap" xmlns:f="sap.f"><OverflowToolbar id="overFlowToolbarTop"><Button id="backButton" type="Back" press="onNavButtonPress"/><ToolbarSpacer id="toolBarSapcerId" width="40%"/><Title id="pcTitle" text="{i18n>appTitle}" /></OverflowToolbar><uxap:ObjectPageLayout id="ObjectPageLayout" enableLazyLoading="true" upperCaseAnchorBar="false"><uxap:headerTitle><uxap:ObjectPageDynamicHeaderTitle id="ObjectPageDynamicHeaderTitleid"><uxap:heading><Title id="healthCardTextTitleId" text="{i18n>healthCardText}" /></uxap:heading><uxap:snappedTitleOnMobile><Title id="healthCardTextmTitleId" text="{i18n>healthCardText}"/></uxap:snappedTitleOnMobile></uxap:ObjectPageDynamicHeaderTitle></uxap:headerTitle><uxap:sections><uxap:ObjectPageSection id="logsPerExecutionTitleId" titleUppercase="false" title="{i18n>logsPerExecution}"><uxap:subSections><uxap:ObjectPageSubSection mode="Expanded" id="Section1" titleUppercase="false"><uxap:blocks><f:Card id="logsperExecCard" class="sapUiSmallMargin" width="55%" height="280px"><f:content><Table id="logsPerExecTable" inset="false" growing="true" items="{path:\'ExecutionLogServiceModel>/Top5ExecutionLog\'}"><columns><Column id="IDExecutionColID"><Text id="IDExecutionColTextID" text="{i18n>IDExecution}" /></Column><Column id="dateofExecutionColID" minScreenWidth="Desktop" demandPopin="true"><Text id="dateofExecutionTextID" text="{i18n>dateofExecution}" /></Column><Column id="logsColID" minScreenWidth="Desktop" demandPopin="true"><Text id="logsTextID" text="{i18n>logs}" /></Column></columns><items><ColumnListItem id="ColumnListItemlogsPerExecTableID" vAlign="Middle"><cells><Text id="executionId" text="{ExecutionLogServiceModel>executionId}" /><Text id="timeStamp" text="{path: \'ExecutionLogServiceModel>timeStamp\',targetType:\'any\', formatter :\'.dateFormat\'}"/><Button id="downloadID" text="{i18n>download}" press=".onDownload"/></cells></ColumnListItem></items></Table></f:content></f:Card></uxap:blocks></uxap:ObjectPageSubSection></uxap:subSections></uxap:ObjectPageSection><uxap:ObjectPageSection id="resultperEmployeeSection" titleUppercase="false" title="{i18n>resultperEmployee}"><uxap:subSections><uxap:ObjectPageSubSection title="{i18n>resultperEmployee}" mode="Expanded" id="Section2" titleUppercase="false"><uxap:blocks><VBox id="vBox"><OverflowToolbar id="searchOverflowToolbar"><ToolbarSpacer id="toolbarSpacerID" width="5%"></ToolbarSpacer><Input id="searchInput" submit=".onSearch" width="20%" placeholder="{i18n>userID}"/><Button id="searchBtn" text="{i18n>search}" press=".onSearch"/></OverflowToolbar><f:Card id="resultperEmployeeCardID" width="96%" height="400px" class="sapUiResponsiveMargin"><f:content><Panel id="resultperEmployeePanelID" width="98%" height="390px" ><Table id="resultPerEmpTable" noDataText="{i18n>noEligible}" inset="false" growing="true" items="{path:\'ExecutionLogServiceModel>/ExecutionLogs\', parameters:{$count:true}}"><columns><Column id="IDExecutionCol"><Text id="IDExecutionTxtID" text="{i18n>IDExecution}" /></Column><Column id="timeStampColID" minScreenWidth="Desktop" demandPopin="true"><Text id="timeStampColTxtID" text="{i18n>timeStamp}" /></Column><Column id="simulationModeColID" minScreenWidth="Desktop" demandPopin="true"><Text id="simulationModeColTextID" text="{i18n>simulationMode}" /></Column><Column id="userIDcolID" minScreenWidth="Desktop" demandPopin="true"><Text id="userIDcolTxtID" text="{i18n>userID}" /></Column><Column id="organizationalUnitColID" minScreenWidth="Desktop" demandPopin="true"><Text id="organizationalUnitColTxtID" text="{i18n>organizationalUnit}" /></Column><Column id="groupColID" minScreenWidth="Desktop" demandPopin="true"><Text id="groupColTxtID" text="{i18n>group}" /></Column><Column id="departmentColId" minScreenWidth="Desktop" demandPopin="true"><Text id="departmentColTxtId" text="{i18n>department}" /></Column><Column id="jobColID" minScreenWidth="Desktop" demandPopin="true"><Text id="jobColTxtID" text="{i18n>job}" /></Column><Column id="hRPersonnelAreaColID" minScreenWidth="Desktop" demandPopin="true"><Text id="hRPersonnelAreaColTxtID" text="{i18n>hRPersonnelArea}" /></Column><Column id="employeeGroupColID" minScreenWidth="Desktop" demandPopin="true"><Text id="employeeGroupColTxtID" text="{i18n>employeeGroup}" /></Column><Column id="payComponentColID" minScreenWidth="Desktop" demandPopin="true"><Text id="payComponentColTxtID" text="{i18n>payComponent}" /></Column><Column id="eligibleColID" minScreenWidth="Desktop" demandPopin="true"><Text id="eligibleColTxtID" text="{i18n>eligible}" /></Column><Column id="referenceDateColID" minScreenWidth="Desktop" demandPopin="true"><Text id="referenceDateCoTxtlID" text="{i18n>referenceDate}" /></Column><Column id="amountColID" minScreenWidth="Desktop" demandPopin="true"><Text id="amountColTxtID" text="{i18n>amount}" /></Column><Column id="toBeUpdatedColID" minScreenWidth="Desktop" demandPopin="true"><Text id="toBeUpdatedColTxtID" text="{i18n>toBeUpdated}" /></Column><Column id="detailsColID" minScreenWidth="Desktop" demandPopin="true"><Text id="detailsColTxtID" text="{i18n>details}" /></Column></columns><items><ColumnListItem id="columnListItemID" vAlign="Middle"><cells><Text id="executionIdID" text="{ExecutionLogServiceModel>executionId}" /><Text id="timeStampID" text="{path:\'ExecutionLogServiceModel>timeStamp\', formatter :\'.dateTimeFormat\'}" /><Text id="simulationModeID" text="{= %{ExecutionLogServiceModel>simulationMode} ? \'X\' : \'\'}" /><Text id="userIdID" text="{ExecutionLogServiceModel>userId}" /><Text id="orgUnitID" text="{ExecutionLogServiceModel>orgUnit}" /><Text id="groupID" text="{ExecutionLogServiceModel>group}" /><Text id="departmentID" text="{ExecutionLogServiceModel>department}" /><Text id="jobID" text="{ExecutionLogServiceModel>job}" /><Text id="hRPersonnelAreaID" text="{ExecutionLogServiceModel>hRPersonnelArea}" /><Text id="employeeGroupID" text="{ExecutionLogServiceModel>employeeGroup}" /><Text id="payComponentID" text="{ExecutionLogServiceModel>payComponent}" /><Text id="eligibleID" text="{ExecutionLogServiceModel>eligible}" /><Text id="referenceDateID" text="{path:\'ExecutionLogServiceModel>referenceDate\', formatter :\'.dateFormat\'}" /><Text id="amountID" text="{ExecutionLogServiceModel>amount}" /><Text id="updatedID" text="{ExecutionLogServiceModel>updated}" /><Text id="detailsID" text="{ExecutionLogServiceModel>details}" /></cells></ColumnListItem></items></Table></Panel></f:content></f:Card></VBox></uxap:blocks></uxap:ObjectPageSubSection></uxap:subSections></uxap:ObjectPageSection></uxap:sections></uxap:ObjectPageLayout></mvc:View>',
	"qa/com/qelng/pcui5/paycomponentsui5/view/HealthCardForm.view.xml":'<mvc:View controllerName="qa.com.qelng.pcui5.paycomponentsui5.controller.HealthCardForm"\n    xmlns:mvc="sap.ui.core.mvc" displayBlock="true"\n    xmlns="sap.m" xmlns:l="sap.ui.layout"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:core="sap.ui.core"><Page id="page" title="{i18n>appTitle}" titleAlignment="Center"><content><FlexBox id="flexBoxId" alignItems="Center" justifyContent="Center" direction="Column"><f:SimpleForm id="healthCardForm"\n                    editable="false"\n                    layout="ResponsiveGridLayout"\n                    title="{i18n>formTitle}"\n                    labelSpanXL="5"\n                    labelSpanL="5"\n                    labelSpanM="5"\n                    labelSpanS="5"\n                    adjustLabelSpan="false"\n                    emptySpanXL="1"\n                    emptySpanL="0"\n                    emptySpanM="0"\n                    emptySpanS="0"\n                    columnsXL="2"\n                    columnsL="2"\n                    columnsM="2"\n                    singleContainerFullSize="true"><f:content><core:Title id="pleaseSelectId" text="{i18n>pleaseSelect}" /><Label id="payComponentLabelId" required="true" text="{i18n>payComponent}" /><ComboBox items="{path: \'pcModel>/PayComponent\'}" id="pcSelect" selectedKey="{payComponent}" placeholder="{i18n>noSelection}"><items><core:Item id="pcItem" key="{pcModel>ID}_#{pcModel>name}_#{pcModel>code}" text="{pcModel>name} ({pcModel>code})" /></items></ComboBox><Label id="referenceYearLabelId" required="true" text="{i18n>referenceYear}" /><ComboBox id="referenceYearSelect" items="{year}" selectedKey="{referenceYear}" selectionChange="handleRefYearChange" placeholder="{i18n>noSelection}"><items><core:Item id="yearItem" text="{year}" key="{year}"/></items></ComboBox><core:Title id="modeTitle" text="{i18n>mode}" /><Label id="simulationModeLabel" text="{i18n>simulationMode}"/><CheckBox id="simulationModeCheckbox" selected="{simulationMode}"/><core:Title id="employeeFilterCriteriaTitle" text="{i18n>employeeFilterCriteria}" /><Label id="userIdLabel" text="{i18n>userId}" /><Input id="userIdInput" value="{userId}" placeholder="{i18n>commaSeparated}" tooltip="{userId}"/><Label id="organizationalUnitLabel" text="{i18n>organizationalUnit}" /><Input id="orgUnitInput" showValueHelp="true" value="{organizationalUnit}" valueHelpRequest=".orgUnitValueHelp" placeholder="{i18n>noSelection}" tooltip="{organizationalUnit}"/><Label id="groupLabel" text="{i18n>group}" /><Input id="groupInput" showValueHelp="true" value="{group}" valueHelpRequest=".groupValueHelp" placeholder="{i18n>noSelection}" tooltip="{group}"/><Label id="departmentLabel" text="{i18n>department}" /><Input id="departmentInput" showValueHelp="true" value="{department}" valueHelpRequest=".departmentValueHelp" placeholder="{i18n>noSelection}" tooltip="{department}"/><Label id="jobLabel" text="{i18n>job}" /><Input id="jobInput" showValueHelp="true" value="{job}" valueHelpRequest=".jobValueHelp" placeholder="{i18n>noSelection}" tooltip="{job}"/><Label id="hrPersonnelAreaLabel" text="{i18n>hrPersonnelArea}"/><Input id="hrPersonnelAreaInput" showValueHelp="true" value="{hrPersonnelArea}" valueHelpRequest=".hrPersonnelAreaValueHelp" placeholder="{i18n>noSelection}" tooltip="{hrPersonnelArea}"/><Label id="employeeGroupLabel" text="{i18n>employeeGroup}"/><Input id="employeeGroupInput" showValueHelp="true" value="{employeeGroup}" valueHelpRequest=".employeeGroupValueHelp" placeholder="{i18n>noSelection}" tooltip="{employeeGroup}"/><core:Title id="additionalSettingsTitle" text="{i18n>additionalSettings}"/><Label id="adminEmailLabel" text="{i18n>adminEmail}"/><Input id="adminEmailInput" value="{adminEmail}" placeholder="{i18n>commaSeparated}" tooltip="{adminEmail}"/></f:content></f:SimpleForm></FlexBox></content><footer><OverflowToolbar id="overflowToolbar" width="100%"><ToolbarSpacer id="toolbarSpacer1" width="25%"/><Button id="buttonExecute" type="Emphasized" text="{i18n>execute}" press="onExecute"/><ToolbarSpacer id="toolbarSpacer2" width="32%"/><Button id="buttonLogsResults" type="Emphasized" text="{i18n>logsAndResults}" press="onPressExecLogs"/></OverflowToolbar></footer></Page></mvc:View>\n',
	"qa/com/qelng/pcui5/paycomponentsui5/view/departmentValueHelp.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"><SelectDialog\n        id="departmentList"\n\t\tnoDataText="{i18n>noData}"\n\t\ttitle="{i18n>job}"\n\t\tconfirm=".onValueHelpDialogConfirm"\n\t\tshowClearButton="true"\n        multiSelect="true"\n        rememberSelections="true"\n\t\titems="{path:\'pcModel>/qa_com_qelng_pc_Department\', parameters:{$select:\'startDate,endDate\'}}"><StandardListItem id="departmentListItem"\n\t\t\ttitle="{pcModel>name_defaultValue} ({pcModel>custExternalcode})"\n\t\t\ttype="Active" /></SelectDialog></core:FragmentDefinition>',
	"qa/com/qelng/pcui5/paycomponentsui5/view/employeeGroupValueHelp.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"><SelectDialog\n        id="employeeGroupList"\n\t\tnoDataText="{i18n>noData}"\n\t\ttitle="{i18n>job}"\n\t\tconfirm=".onValueHelpDialogConfirm"\n\t\tshowClearButton="true"\n        multiSelect="true"\n        rememberSelections="true"\n\t\titems="{path:\'pcModel>/qa_com_qelng_pc_CustEmployeeGroup\', parameters:{$select:\'effectiveStartDate,mdfSystemEffectiveEndDate\'}}"><StandardListItem id="employeeGroupListItem"\n\t\t\ttitle="{pcModel>externalName} ({pcModel>externalCode})"\n\t\t\ttype="Active" /></SelectDialog></core:FragmentDefinition>',
	"qa/com/qelng/pcui5/paycomponentsui5/view/groupValueHelp.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"><SelectDialog\n        id="groupList"\n\t\tnoDataText="{i18n>noData}"\n\t\ttitle="{i18n>job}"\n\t\tconfirm=".onValueHelpDialogConfirm"\n\t\tshowClearButton="true"\n        multiSelect="true"\n        rememberSelections="true"\n\t\titems="{path:\'pcModel>/qa_com_qelng_pc_Group\', parameters:{$select:\'startDate,endDate\'}}"><StandardListItem id="groupListItem"\n\t\t\ttitle="{pcModel>name_defaultValue} ({pcModel>custExternalcode})"\n\t\t\ttype="Active" /></SelectDialog></core:FragmentDefinition>',
	"qa/com/qelng/pcui5/paycomponentsui5/view/hrPersonnelAreaValueHelp.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"><SelectDialog\n        id="hrPersonnelAreaList"\n\t\tnoDataText="{i18n>noData}"\n\t\ttitle="{i18n>job}"\n\t\tconfirm=".onValueHelpDialogConfirm"\n\t\tshowClearButton="true"\n        multiSelect="true"\n        rememberSelections="true"\n\t\titems="{path:\'pcModel>/qa_com_qelng_pc_HRPersonnelArea\', parameters:{$select:\'effectiveStartDate,mdfSystemEffectiveEndDate\'}}"><StandardListItem id="hrPersonnelAreaListItem"\n\t\t\ttitle="{pcModel>externalName} ({pcModel>externalCode})"\n\t\t\ttype="Active" /></SelectDialog></core:FragmentDefinition>',
	"qa/com/qelng/pcui5/paycomponentsui5/view/jobValueHelp.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"><SelectDialog\n        id="jobList"\n\t\tnoDataText="{i18n>noData}"\n\t\ttitle="{i18n>job}"\n\t\tconfirm=".onValueHelpDialogConfirm"\n\t\tshowClearButton="true"\n        multiSelect="true"\n        rememberSelections="true"\n\t\titems="{path:\'pcModel>/qa_com_qelng_pc_FoJob\', parameters:{$select:\'startDate,endDate\'}}"><StandardListItem id="jobListItem"\n\t\t\ttitle="{pcModel>custName} ({pcModel>externalCode})"\n\t\t\ttype="Active" /></SelectDialog></core:FragmentDefinition>',
	"qa/com/qelng/pcui5/paycomponentsui5/view/orgUnitValueHelp.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"><SelectDialog\n        id="orgUnitList"\n\t\tnoDataText="{i18n>noData}"\n\t\ttitle="{i18n>organizationalUnit}"\n\t\tconfirm=".onValueHelpDialogConfirm"\n\t\tshowClearButton="true"\n        multiSelect="true"\n        rememberSelections="true"\n\t\titems="{path:\'pcModel>/qa_com_qelng_pc_OrgUnit\', parameters:{$select:\'startDate,endDate\'}}"><StandardListItem id="orgUnitListItem"\n\t\t\ttitle="{pcModel>orgunit} ({pcModel>externalCode})"\n\t\t\ttype="Active" /></SelectDialog></core:FragmentDefinition>'
});
//# sourceMappingURL=Component-preload.js.map
